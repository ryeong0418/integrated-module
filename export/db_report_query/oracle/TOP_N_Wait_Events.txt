WITH SNAP_DATE AS (SELECT SNAP_ID, DBID, INSTANCE_NUMBER, BEGIN_INTERVAL_TIME, END_INTERVAL_TIME
					 FROM DBA_HIST_SNAPSHOT
					WHERE BEGIN_INTERVAL_TIME >= TRUNC(TO_DATE( '20231207' , 'YYYYMMDD' ))		--PARAMETER 1 (시작일자)
					  AND BEGIN_INTERVAL_TIME < TRUNC(TO_DATE( '20231215' , 'YYYYMMDD' )) +5	--PARAMETER 1 & PARAMETER 2 (시작일자 & INTERVAL)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) >= 8					--PARAMETER3 (시작시간)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) < 8 + 10),				--PARAMETER3 & PARAMETER4 (시작시간 & INTERVAL)
DB_TIME_TOT AS (SELECT A.INSTANCE_NUMBER,
					  A.STAT_NAME,
					  MAX(A.VALUE) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID DESC) -  MIN(A.VALUE) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID ASC) DELTA
				 FROM DBA_HIST_SYS_TIME_MODEL A ,
					  SNAP_DATE B
				WHERE A.DBID = B.DBID
				  AND A.INSTANCE_NUMBER=B.INSTANCE_NUMBER
				  AND A.SNAP_ID = B.SNAP_ID
				  AND A.STAT_NAME IN ('DB time')
			   GROUP BY  A.INSTANCE_NUMBER, A.STAT_NAME)
SELECT Z.INSTANCE_NUMBER,
	   Z.EVENT_NAME,
       Z.WAIT_CLASS,
	   Z.TOTAL_WAITS,
	   Z.TOTAL_WAIT_TIME_SEC,
	   Z.AVG_WAIT,
	   Z.DB_TIME_RATIO
  FROM (SELECT X.INSTANCE_NUMBER,
			   X.EVENT_NAME,
               X.WAIT_CLASS,
			   X.TOTAL_WAITS,
			   ROUND(X.TIME_WAITED_MICRO/1000000) TOTAL_WAIT_TIME_SEC,  -- "Total Wait Time (s)",
			   CASE WHEN X.TOTAL_WAITS IS NULL THEN NULL
					WHEN X.TIME_WAITED_MICRO/X.TOTAL_WAITS/1000 < 1 THEN TO_CHAR(X.TIME_WAITED_MICRO/X.TOTAL_WAITS,'FM9990.99') || 'us'
					ELSE TO_CHAR(X.TIME_WAITED_MICRO/X.TOTAL_WAITS/1000,'FM9990.99') || 'ms'
			   END AVG_WAIT,  -- "Avg wait",
			   ROUND(X.TIME_WAITED_MICRO*100/Y.DELTA) DB_TIME_RATIO,  -- "%DB_TIME",
			   ROW_NUMBER () OVER(PARTITION BY X.INSTANCE_NUMBER ORDER BY X.TIME_WAITED_MICRO DESC) RN
		  FROM (SELECT A.INSTANCE_NUMBER,
					   A.EVENT_NAME,
                       A.WAIT_CLASS,
					   MAX(A.TOTAL_WAITS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID DESC) - MIN(A.TOTAL_WAITS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID ASC) TOTAL_WAITS,
					   MAX(A.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID DESC) - MIN(A.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID ASC) TOTAL_TIMEOUTS,
					   MAX(A.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID DESC) - MIN(A.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID ASC) TIME_WAITED_MICRO
				  FROM DBA_HIST_SYSTEM_EVENT A,
					   SNAP_DATE B
				 WHERE A.DBID = B.DBID
				   AND A.INSTANCE_NUMBER = B.INSTANCE_NUMBER
				   AND A.SNAP_ID = B.SNAP_ID
				   AND A.WAIT_CLASS <> 'Idle'
				GROUP BY A.INSTANCE_NUMBER, A.EVENT_NAME, A.WAIT_CLASS) X,
			   (SELECT INSTANCE_NUMBER, DELTA
				  FROM DB_TIME_TOT) Y
		 WHERE X.INSTANCE_NUMBER = Y.INSTANCE_NUMBER) Z
 WHERE Z.RN <= 10
ORDER BY Z.INSTANCE_NUMBER, Z.RN