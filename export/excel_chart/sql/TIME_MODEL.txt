WITH SNAP_DATE AS (select snap_id, DBID, INSTANCE_NUMBER
                     from dba_hist_snapshot
                    WHERE BEGIN_INTERVAL_TIME >= TO_DATE( '#(StartDate)' , 'YYYY-MM-DD' )
                      AND END_INTERVAL_TIME < TO_DATE( '#(EndDate)' , 'YYYY-MM-DD' )
),
TIME_MODEL AS (
select DBID, INSTANCE_NUMBER, STAT_NAME, sum(delta) val
from (
select a.snap_id, a.DBID, a.INSTANCE_NUMBER, a.STAT_NAME,
	   value - LAG(a.value) over (partition by a.DBID, a.INSTANCE_NUMBER, a.STAT_NAME order by a.snap_id) delta
  from DBA_HIST_SYS_TIME_MODEL a, SNAP_DATE b
 where A.SNAP_ID=B.SNAP_ID
   AND A.DBID=B.DBID
   AND A.INSTANCE_NUMBER=B.INSTANCE_NUMBER
   and stat_name in ('DB time','DB CPU','background cpu time','background elapsed time')
   )
group by DBID, INSTANCE_NUMBER, STAT_NAME
)
SELECT * FROM (
select U.INSTANCE_NUMBER, U.STAT_NAME,
	   ROUND(U.val/1000000) "Time (s)",
	   ROUND(U.val*100/y.val,2) "% of DB Time",
	   DECODE(U.STAT_NAME,'DB CPU',ROUND(U.val*100/Z.VAL,2),NULL) "% of Total CPU Time"
	   --,U.RNK
  from (select x.dbid, x.INSTANCE_NUMBER, x.STAT_NAME,
			   sum(delta) val,
			   ROW_NUMBER() OVER(PARTITION BY x.INSTANCE_NUMBER ORDER BY sum(delta) desc ) RNK
		  from (select a.dbid, a.INSTANCE_NUMBER, a.STAT_NAME,
					   a.value - LAG(a.value) over (partition by a.DBID, a.INSTANCE_NUMBER, a.STAT_NAME order by a.snap_id) delta
				  from DBA_HIST_SYS_TIME_MODEL a, SNAP_DATE b
				 where a.dbid = b.dbid
				   and a.snap_id = b.snap_id
				   and a.instance_number = b.instance_number
				   and a.stat_name not in ('DB time','background cpu time','background elapsed time')
				) x
		group by x.dbid, x.INSTANCE_NUMBER, x.STAT_NAME
		order by x.INSTANCE_NUMBER, val desc
		) U,
		(select DBID, INSTANCE_NUMBER, STAT_NAME, val
		   from TIME_MODEL
		  where stat_name = 'DB time') y,
		(select DBID, INSTANCE_NUMBER, 'TOT_CPU_TIME' TOT_CPU_TIME, SUM(val) VAL
		   from TIME_MODEL
		  where stat_name IN ('DB time','background cpu time')
		 GROUP BY DBID, INSTANCE_NUMBER, 'TOT_CPU_TIME') Z
 where U.DBID = y.DBID
   AND U.DBID = Z.DBID
   and U.INSTANCE_NUMBER = y.INSTANCE_NUMBER
   AND U.INSTANCE_NUMBER = Z.INSTANCE_NUMBER
   and u.rnk < 13
UNION ALL
select v.INSTANCE_NUMBER, v.STAT_NAME,
	   ROUND(v.val/1000000) "Time (s)",
	   null,
	   DECODE(v.STAT_NAME,'background cpu time',ROUND(v.val*100/w.VAL,2),NULL) "% of Total CPU Time"
	   --,null
from TIME_MODEL v,
	 (select DBID, INSTANCE_NUMBER, 'TOT_CPU_TIME' TOT_CPU_TIME, SUM(val) VAL
		from TIME_MODEL
	   where stat_name IN ('DB time','background cpu time')
	  GROUP BY DBID, INSTANCE_NUMBER, 'TOT_CPU_TIME') w
where v.STAT_NAME in ('DB time','background cpu time','background elapsed time')
  AND v.DBID = w.DBID
  and v.INSTANCE_NUMBER = w.INSTANCE_NUMBER
UNION ALL
select INSTANCE_NUMBER, 'total CPU time', round(sum(val/1000000),2) VAL, null, null
       --,null
		from TIME_MODEL
	   where stat_name IN ('DB time','background cpu time')
	  GROUP BY DBID, INSTANCE_NUMBER, 'TOT_CPU_TIME')