WITH TIME_MODEL AS (
                    SELECT B.INSTANCE_NUMBER,
                           B.STAT_NAME,
                           MAX(B.VALUE) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID DESC) -  MIN(B.VALUE) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID ASC) VALUE
                      FROM DBA_HIST_SNAPSHOT A ,
                           DBA_HIST_SYS_TIME_MODEL B
                     WHERE A.SNAP_ID=B.SNAP_ID
                       AND A.DBID=B.DBID
                       AND A.INSTANCE_NUMBER=B.INSTANCE_NUMBER
                       AND B.STAT_NAME IN ( 'DB time', 'DB CPU')
                       AND A.BEGIN_INTERVAL_TIME > = TO_DATE( '#(StartDate)' , 'YYYY-MM-DD' )
                       AND A.END_INTERVAL_TIME < TO_DATE( '#(EndDate)' , 'YYYY-MM-DD' )
                     GROUP BY  B.INSTANCE_NUMBER,
                               B.STAT_NAME
                    )
SELECT *
  FROM (
         SELECT A.INSTANCE_NUMBER,
                A.EVENT_NAME,
                A.WAIT_CLASS,
                A.TOTAL_WAITS,
                --A.TOTAL_TIMEOUTS,
                --A.TIME_WAITED_MICRO,
				ROUND(A.TIME_WAITED_MICRO/1000000) "Total Wait Time (s)",
                CASE WHEN A.TOTAL_WAITS IS NULL THEN NULL
					 WHEN A.TOTAL_WAITS = 0 THEN '0'
					 WHEN A.TIME_WAITED_MICRO/A.TOTAL_WAITS/1000 < 1 THEN TO_CHAR(ROUND(A.TIME_WAITED_MICRO/A.TOTAL_WAITS,2),'FM999,999,999,990.99') || 'us'
					 ELSE TO_CHAR(ROUND(A.TIME_WAITED_MICRO/A.TOTAL_WAITS/1000,2),'FM999,999,999,990.99') || 'ms'
				END "Avg wait",
				ROUND(A.TIME_WAITED_MICRO *100 / B.VALUE) AS "%DB_TIME",
                ROW_NUMBER () OVER(PARTITION BY A.INSTANCE_NUMBER ORDER BY A.TIME_WAITED_MICRO DESC) RNK
           FROM ( SELECT B.INSTANCE_NUMBER,
                         B.EVENT_NAME,
                         B.WAIT_CLASS,
                         MAX(B.TOTAL_WAITS_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID DESC) -  MIN(B.TOTAL_WAITS_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID ASC) TOTAL_WAITS,
                         MAX(B.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID DESC) -  MIN(B.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID ASC) TOTAL_TIMEOUTS,
                         MAX(B.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID DESC) -  MIN(B.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK FIRST ORDER BY B.SNAP_ID ASC) TIME_WAITED_MICRO
                    FROM DBA_HIST_SNAPSHOT A ,
                         DBA_HIST_SYSTEM_EVENT B
                   WHERE A.SNAP_ID=B.SNAP_ID
                     AND A.DBID=B.DBID
                     AND A.INSTANCE_NUMBER=B.INSTANCE_NUMBER
                     AND B.WAIT_CLASS <> 'Idle'
                     AND A.BEGIN_INTERVAL_TIME > = TO_DATE( '#(StartDate)' , 'YYYY-MM-DD' )
                     AND A.END_INTERVAL_TIME < TO_DATE( '#(EndDate)' , 'YYYY-MM-DD' )
                   GROUP BY B.INSTANCE_NUMBER,
                            B.EVENT_NAME,
                            B.WAIT_CLASS
                  UNION ALL
                  SELECT INSTANCE_NUMBER,
                         STAT_NAME,
                         NULL,
                         NULL,
                         NULL,
                         VALUE
                    FROM TIME_MODEL
                   WHERE STAT_NAME = 'DB CPU'
                 ) A,
                ( SELECT INSTANCE_NUMBER, VALUE
                    FROM TIME_MODEL
                   WHERE STAT_NAME = 'DB time'
                 ) B
          WHERE A.INSTANCE_NUMBER=B.INSTANCE_NUMBER
        ) A
 WHERE RNK <= 10
 ORDER BY A.INSTANCE_NUMBER,
          A.RNK