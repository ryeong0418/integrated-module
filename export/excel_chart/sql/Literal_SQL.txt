WITH tot AS (SELECT SUM(elapsed_time) elap_time_tot,
					SUM(cpu_time) cpu_time_tot,
					SUM(sharable_mem) sharable_mem_tot
			   FROM gv$sqlarea
			  WHERE executions > 0
				AND inst_id = (SELECT INST_ID FROM GV$INSTANCE WHERE INSTANCE_NUMBER = '#(INST_NUM)'))  --PARAMETER1
SELECT b.parsing_schema_name AS SCHEMA,
	   b.sql_id,
       SUBSTR(b.sql_text,1,30) sql_text,
	   b.plan_cnt,
	   b.literal_cnt,
	   b.exec_cnt,
	   (SELECT TO_CHAR(ROUND(b.elap_time_sum/tot.elap_time_tot*100,1),'FM990.0') FROM TOT) || '%' AS "ELAP_TIME",
	   (SELECT TO_CHAR(ROUND(b.cpu_time_sum/tot.cpu_time_tot*100,1),'FM990.0') FROM TOT) || '%' AS "CPU_TIME",
	   (SELECT TO_CHAR(ROUND(b.shar_mem_sum/tot.sharable_mem_tot*100,1),'FM990.0') FROM TOT) || '%' AS "SIZE"
  FROM (SELECT a.*
		  FROM (SELECT inst_id,
					   parsing_schema_name,
					   sql_id,
					   sql_text,
					   COUNT( DISTINCT plan_hash_value ) OVER ( PARTITION BY force_matching_signature ) plan_cnt,
					   COUNT( exact_matching_signature ) OVER( PARTITION BY force_matching_signature ) literal_cnt,
					   SUM( executions ) OVER( PARTITION BY force_matching_signature ) exec_cnt,
					   SUM( elapsed_time ) OVER( PARTITION BY force_matching_signature ) elap_time_sum,
					   SUM( cpu_time ) OVER( PARTITION BY force_matching_signature ) cpu_time_sum,
					   SUM( sharable_mem ) OVER( PARTITION BY force_matching_signature ) shar_mem_sum,
					   ROW_NUMBER() over (PARTITION BY force_matching_signature ORDER  BY EXECUTIONS DESC ) rn
				  FROM gv$sqlarea
				 WHERE executions > 0
				   AND force_matching_signature <> 0
				   AND inst_id = (SELECT INST_ID FROM GV$INSTANCE WHERE INSTANCE_NUMBER = '#(INST_NUM)')) a  --PARAMETER1
		 WHERE a.rn = 1
		ORDER BY a.shar_mem_sum DESC) b
WHERE ROWNUM <= 20