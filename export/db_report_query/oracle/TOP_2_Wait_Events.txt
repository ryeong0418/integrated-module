WITH SNAP_DATE AS (SELECT SNAP_ID, DBID, INSTANCE_NUMBER, BEGIN_INTERVAL_TIME, END_INTERVAL_TIME
                     FROM DBA_HIST_SNAPSHOT
                    WHERE BEGIN_INTERVAL_TIME >= TRUNC(TO_DATE( '#(StartDate)' , 'YYYYMMDD' ))		--PARAMETER 1 (시작일자)
					  AND BEGIN_INTERVAL_TIME < TRUNC(TO_DATE( '#(EndDate)' , 'YYYYMMDD' ))	--PARAMETER 1 & PARAMETER 2 (시작일자 & INTERVAL)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) >= '#(StartTime)'				--PARAMETER3 (시작시간)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) < '#(EndTime)'),			--PARAMETER3 & PARAMETER4 (시작시간 & INTERVAL)
SYSSTAT AS (SELECT A.DBID, A.INSTANCE_NUMBER, A.STAT_NAME,
				   MAX(A.VALUE) KEEP(DENSE_RANK LAST ORDER BY A.SNAP_ID) - MIN(VALUE) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID) VAL
			  FROM DBA_HIST_SYSSTAT A, SNAP_DATE B
			 WHERE A.SNAP_ID = B.SNAP_ID
			   AND A.DBID = B.DBID
			   AND A.STAT_NAME IN ('user commits', 'user rollbacks', 'DB time')
GROUP BY A.DBID, A.INSTANCE_NUMBER, A.STAT_NAME)
SELECT X.INSTANCE_NUMBER,
	   X.EVENT_NAME "Event",
	   X.WAITS "Waits",
	   DECODE(X.WAITS,0,0,ROUND(X.TIME_OUTS*100/X.WAITS)) TIME_OUTS, -- "%Time -outs",
	   ROUND(X.WAIT_TIME/1000000) TOTAL_WAIT_TIME, -- "Total Wait Time (s)",
	   DECODE(X.WAITS,0,0,ROUND(X.WAIT_TIME/X.WAITS/1000,2)) || 'ms' AVG_WAIT, -- "Avg wait",
	   ROUND(X.WAITS/Y.VAL,2) WAITS_TXN  -- "Waits /txn"
	   --ROUND(X.WAIT_TIME/1000/Z.VAL*100,2) DB_TIME -- "% DB TIME"
FROM (SELECT A.DBID, A.INSTANCE_NUMBER, A.EVENT_NAME,
			 MAX(A.TOTAL_WAITS_FG) KEEP(DENSE_RANK LAST ORDER BY A.SNAP_ID) - MIN(A.TOTAL_WAITS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID) WAITS,
			 ROUND((MAX(A.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK LAST ORDER BY A.SNAP_ID) - MIN(A.TOTAL_TIMEOUTS_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID))) TIME_OUTS,
			 MAX(A.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK LAST ORDER BY A.SNAP_ID) - MIN(A.TIME_WAITED_MICRO_FG) KEEP(DENSE_RANK FIRST ORDER BY A.SNAP_ID) WAIT_TIME
		FROM DBA_HIST_SYSTEM_EVENT A, SNAP_DATE B
	   WHERE A.SNAP_ID = B.SNAP_ID
		 AND A.DBID = B.DBID
		 AND A.EVENT_NAME = '#(EVENT_NAME)'  --parameter 3
	  GROUP BY A.DBID, A.INSTANCE_NUMBER, A.EVENT_NAME) X,
	 (SELECT DBID, INSTANCE_NUMBER, 'txn_cnt', SUM(VAL) VAL
		FROM SYSSTAT
	   WHERE STAT_NAME IN ('user commits', 'user rollbacks')
	  GROUP BY DBID, INSTANCE_NUMBER, 'txn_cnt') Y,
	 (SELECT DBID, INSTANCE_NUMBER, STAT_NAME, VAL
		FROM SYSSTAT
	   WHERE STAT_NAME = 'DB time') Z
WHERE X.DBID = Y.DBID
AND X.DBID = Z.DBID
AND X.INSTANCE_NUMBER = Y.INSTANCE_NUMBER
AND X.INSTANCE_NUMBER = Z.INSTANCE_NUMBER