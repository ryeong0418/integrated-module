WITH SNAP_DATE AS (SELECT SNAP_ID, DBID, INSTANCE_NUMBER, BEGIN_INTERVAL_TIME, END_INTERVAL_TIME
                     FROM DBA_HIST_SNAPSHOT
                    WHERE BEGIN_INTERVAL_TIME >= TRUNC(TO_DATE( '#(StartDate)' , 'YYYYMMDD' ))		--PARAMETER 1 (시작일자)
					  AND BEGIN_INTERVAL_TIME < TRUNC(TO_DATE( '#(EndDate)' , 'YYYYMMDD' ))	--PARAMETER 1 & PARAMETER 2 (시작일자 & INTERVAL)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) >= '#(StartTime)'					--PARAMETER3 (시작시간)
					  AND TO_NUMBER(TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24')) < '#(EndTime)')				--PARAMETER3 & PARAMETER4 (시작시간 & INTERVAL)
SELECT X.INSTANCE_NUMBER,
	   Y.OWNER || '.' || Y.OBJECT_NAME || '.' || Y.OBJECT_TYPE NAME,
	   X.LOGICAL_READS_SUM-X.PHYSICAL_READS_SUM LOGICAL_READS_BLOCK,
	   X.PHYSICAL_READS_SUM PHYSICAL_READS_BLOCK,
	   X.PHYSICAL_WRITES_SUM PHYSICAL_WRITES_BLOCK
	   --X.RNK
  FROM (SELECT *
		  FROM (SELECT A.INSTANCE_NUMBER,
					   A.OBJ#,
					   SUM(A.LOGICAL_READS_DELTA) LOGICAL_READS_SUM,
					   SUM(A.PHYSICAL_READS_DELTA) PHYSICAL_READS_SUM,
					   SUM(A.PHYSICAL_WRITES_DELTA) PHYSICAL_WRITES_SUM,
					   SUM(A.ROW_LOCK_WAITS_DELTA) ROW_LOCK_WAITS_SUM,
					   SUM(A.GC_BUFFER_BUSY_DELTA) GC_BUFFER_BUSY_SUM,
					   ROW_NUMBER() OVER(PARTITION BY A.INSTANCE_NUMBER ORDER BY SUM(A.LOGICAL_READS_DELTA) DESC ) RNK
				  FROM DBA_HIST_SEG_STAT A, SNAP_DATE B
				 WHERE A.DBID = B.DBID
				   AND A.SNAP_ID = B.SNAP_ID
				   AND A.INSTANCE_NUMBER = B.INSTANCE_NUMBER
				GROUP BY A.INSTANCE_NUMBER, A.OBJ#)
		 WHERE RNK <= 10
		) X,
		DBA_HIST_SEG_STAT_OBJ Y
WHERE X.OBJ# = Y.OBJ#
  AND Y.OWNER <> '** MISSING **'
ORDER BY X.INSTANCE_NUMBER, X.LOGICAL_READS_SUM DESC